import{y as V,Z as f,r as h,$ as O,a0 as S,a1 as x,N as B,x as I,a2 as P,a3 as z,u as E,Y as H,a4 as M}from"./BJulYKC0.js";const j=e=>e==="defer"||e===!1;function K(...e){var g;const a=typeof e[e.length-1]=="string"?e.pop():void 0;typeof e[0]!="string"&&e.unshift(a);let[n,c,t={}]=e;if(typeof n!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof c!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const s=V(),b=c,C=()=>f.value,U=()=>s.isHydrating?s.payload.data[n]:s.static.data[n];t.server=t.server??!0,t.default=t.default??C,t.getCachedData=t.getCachedData??U,t.lazy=t.lazy??!1,t.immediate=t.immediate??!0,t.deep=t.deep??f.deep,t.dedupe=t.dedupe??"cancel";const y=t.getCachedData(n,s),p=y!=null;if(!s._asyncData[n]||!t.immediate){(g=s.payload._errors)[n]??(g[n]=f.errorValue);const u=t.deep?h:O;s._asyncData[n]={data:u(p?y:t.default()),pending:h(!p),error:S(s.payload._errors,n),status:h("idle"),_default:t.default}}const r={...s._asyncData[n]};delete r._default,r.refresh=r.execute=(u={})=>{if(s._asyncDataPromises[n]){if(j(u.dedupe??t.dedupe))return s._asyncDataPromises[n];s._asyncDataPromises[n].cancelled=!0}if(u._initial||s.isHydrating&&u._initial!==!1){const l=u._initial?y:t.getCachedData(n,s);if(l!=null)return Promise.resolve(l)}r.pending.value=!0,r.status.value="pending";const d=new Promise((l,o)=>{try{l(b(s))}catch(D){o(D)}}).then(async l=>{if(d.cancelled)return s._asyncDataPromises[n];let o=l;t.transform&&(o=await t.transform(l)),t.pick&&(o=T(o,t.pick)),s.payload.data[n]=o,r.data.value=o,r.error.value=f.errorValue,r.status.value="success"}).catch(l=>{if(d.cancelled)return s._asyncDataPromises[n];r.error.value=z(l),r.data.value=E(t.default()),r.status.value="error"}).finally(()=>{d.cancelled||(r.pending.value=!1,delete s._asyncDataPromises[n])});return s._asyncDataPromises[n]=d,s._asyncDataPromises[n]},r.clear=()=>N(s,n);const _=()=>r.refresh({_initial:!0}),R=t.server!==!1&&s.payload.serverRendered;{const u=H();if(u&&!u._nuxtOnBeforeMountCbs){u._nuxtOnBeforeMountCbs=[];const o=u._nuxtOnBeforeMountCbs;x(()=>{o.forEach(D=>{D()}),o.splice(0,o.length)}),B(()=>o.splice(0,o.length))}R&&s.isHydrating&&(r.error.value||y!=null)?(r.pending.value=!1,r.status.value=r.error.value?"error":"success"):u&&(s.payload.serverRendered&&s.isHydrating||t.lazy)&&t.immediate?u._nuxtOnBeforeMountCbs.push(_):t.immediate&&_();const d=M();if(t.watch){const o=I(t.watch,()=>r.refresh());d&&P(o)}const l=s.hook("app:data:refresh",async o=>{(!o||o.includes(n))&&await r.refresh()});d&&P(l)}const v=Promise.resolve(s._asyncDataPromises[n]).then(()=>r);return Object.assign(v,r),v}function q(...e){const a=typeof e[e.length-1]=="string"?e.pop():void 0;typeof e[0]!="string"&&e.unshift(a);const[n,c,t={}]=e;return K(n,c,{...t,lazy:!0},null)}function N(e,a){a in e.payload.data&&(e.payload.data[a]=void 0),a in e.payload._errors&&(e.payload._errors[a]=f.errorValue),e._asyncData[a]&&(e._asyncData[a].data.value=void 0,e._asyncData[a].error.value=f.errorValue,e._asyncData[a].pending.value=!1,e._asyncData[a].status.value="idle"),a in e._asyncDataPromises&&(e._asyncDataPromises[a]&&(e._asyncDataPromises[a].cancelled=!0),e._asyncDataPromises[a]=void 0)}function T(e,a){const n={};for(const c of a)n[c]=e[c];return n}let m;const F=new Uint8Array(16);function L(){if(!m&&(m=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!m))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return m(F)}const i=[];for(let e=0;e<256;++e)i.push((e+256).toString(16).slice(1));function Y(e,a=0){return i[e[a+0]]+i[e[a+1]]+i[e[a+2]]+i[e[a+3]]+"-"+i[e[a+4]]+i[e[a+5]]+"-"+i[e[a+6]]+i[e[a+7]]+"-"+i[e[a+8]]+i[e[a+9]]+"-"+i[e[a+10]]+i[e[a+11]]+i[e[a+12]]+i[e[a+13]]+i[e[a+14]]+i[e[a+15]]}const Z=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),w={randomUUID:Z};function G(e,a,n){if(w.randomUUID&&!a&&!e)return w.randomUUID();e=e||{};const c=e.random||(e.rng||L)();return c[6]=c[6]&15|64,c[8]=c[8]&63|128,Y(c)}export{q as a,K as u,G as v};
